<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ @Copyright 2020 HardBackNutter
  ~ @License GNU General Public License
  ~
  ~ This file is part of NeverTooManyBooks.
  ~
  ~ NeverTooManyBooks is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ NeverTooManyBooks is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with NeverTooManyBooks. If not, see <http://www.gnu.org/licenses/>.
  -->

<!--
These are the standard attributes that make up a complete theme.
https://developer.android.com/reference/android/R.styleable.html#Theme

Material styles etc.
https://medium.com/androiddevelopers/migrating-to-material-components-for-android-ec6757795351

Full color list:
https://material.io/design/material-theming/implementing-your-theme.html#color

TODO: these + the night variants need optimizing.
-->
<resources>
    <!--Top level DayNight theme to be used in AndroidManifest.xml-->
    <style name="Theme.App" parent="Base.Theme.App" />

    <style name="Base.Theme.App" parent="Theme.MaterialComponents.DayNight.NoActionBar">
        <!-- ======================================= -->
        <!-- Material color attributes (light theme) -->
        <!-- ======================================= -->
        <item name="android:statusBarColor">@color/blue_grey_300</item>

        <item name="colorPrimary">@color/blue_grey_100</item>
        <item name="colorPrimaryVariant">@color/blue_grey_200</item>
        <item name="colorOnPrimary">@color/black</item>

        <item name="colorSecondary">@color/cyan_200</item>
        <item name="colorSecondaryVariant">@color/cyan_300</item>
        <item name="colorOnSecondary">@color/black</item>

        <!--        <item name="colorSurface">@color/white</item>-->
        <!--        <item name="colorOnSurface">@color/black</item>-->

        <!-- framework - The color applied to icons/controls in their normal state. -->
        <!--        <item name="colorControlNormal">?attr/colorOnPrimary</item>-->
        <!-- framework - The color applied to icons/controls in their activated state (e.g. checked). -->
        <!--        <item name="colorControlActivated">?attr/colorPrimary</item>-->
        <!-- framework - The color applied to control highlights (e.g. ripples, list selectors). -->
        <!--        <item name="colorControlHighlight">DEFAULT</item>-->


        <!-- ==================== -->
        <!-- Application specific -->
        <!-- ==================== -->
        <!-- In light mode, the default colorSurface is "too white". -->
        <item name="appBookCardBackgroundColor">@color/grey_50</item>
        <!-- gradient used in the Navigation side bar. -->
        <item name="appNavBarColorStart">@color/blue_grey_400</item>
        <item name="appNavBarColorCenter">@color/blue_grey_100</item>
        <item name="appNavBarColorEnd">@color/blue_grey_50</item>
        <!-- button text. The default colorPrimary (blue_grey_100) is to light on the white background. -->
        <item name="appDialogButtonTextColor">@color/blue_grey_900</item>

        <!-- ================ -->
        <!-- Component styles -->
        <!-- ================ -->
        <item name="materialAlertDialogTheme">@style/ThemeOverlay.App.MaterialAlertDialog</item>
        <item name="buttonBarButtonStyle">@style/App.ButtonBarButtons</item>
        <item name="buttonBarNeutralButtonStyle">@style/App.ButtonBarButtons</item>
        <item name="buttonBarNegativeButtonStyle">@style/App.ButtonBarButtons</item>
        <item name="buttonBarPositiveButtonStyle">@style/App.ButtonBarButtons</item>
        <item name="snackbarTextViewStyle">@style/App.SnackbarTextView</item>
        <item name="textAppearanceBody1">@style/App.TextAppearance.Body1</item>
        <item name="textAppearanceBody2">@style/App.TextAppearance.Body2</item>
    </style>

    <!-- Specific Theme for the startup activity so it looks like a dialog as intended. -->
    <style name="Theme.App.Startup" parent="Base.Theme.App.Startup" />

    <style name="Base.Theme.App.Startup" parent="Theme.MaterialComponents.DayNight.Dialog">
        <!-- ==================== -->
        <!-- Application specific -->
        <!-- ==================== -->
        <item name="appDialogButtonTextColor">@color/blue_grey_900</item>

        <!-- ================ -->
        <!-- Component styles -->
        <!-- ================ -->
        <item name="materialAlertDialogTheme">@style/ThemeOverlay.App.MaterialAlertDialog</item>
        <item name="buttonBarButtonStyle">@style/App.ButtonBarButtons</item>
        <item name="buttonBarNeutralButtonStyle">@style/App.ButtonBarButtons</item>
        <item name="buttonBarNegativeButtonStyle">@style/App.ButtonBarButtons</item>
        <item name="buttonBarPositiveButtonStyle">@style/App.ButtonBarButtons</item>
        <item name="snackbarTextViewStyle">@style/App.SnackbarTextView</item>
    </style>

    <style name="ThemeOverlay.App.MaterialAlertDialog" parent="Base.ThemeOverlay.App.MaterialAlertDialog" />

    <style name="Base.ThemeOverlay.App.MaterialAlertDialog" parent="ThemeOverlay.MaterialComponents.MaterialAlertDialog">
        <!-- ==================== -->
        <!-- Application specific -->
        <!-- ==================== -->
        <!-- button text. The default colorPrimary (blue_grey_100) is to light on the white background. -->
        <item name="appDialogButtonTextColor">@color/blue_grey_900</item>

        <!-- ================ -->
        <!-- Component styles -->
        <!-- ================ -->
        <item name="buttonBarButtonStyle">@style/App.ButtonBarButtons</item>
        <item name="buttonBarNeutralButtonStyle">@style/App.ButtonBarButtons</item>
        <item name="buttonBarNegativeButtonStyle">@style/App.ButtonBarButtons</item>
        <item name="buttonBarPositiveButtonStyle">@style/App.ButtonBarButtons</item>

    </style>

    <!-- Specific Theme for full screen usage. -->
    <style name="Theme.App.FullScreen" parent="Base.Theme.App">
        <item name="android:windowFullscreen">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:windowIsFloating">false</item>
    </style>
</resources>
