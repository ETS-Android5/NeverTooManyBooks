<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ @Copyright 2018-2021 HardBackNutter
  ~ @License GNU General Public License
  ~
  ~ This file is part of NeverTooManyBooks.
  ~
  ~ NeverTooManyBooks is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ NeverTooManyBooks is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with NeverTooManyBooks. If not, see <http://www.gnu.org/licenses/>.
  -->

<!--
These are the standard attributes that make up a complete theme.
https://developer.android.com/reference/android/R.styleable.html#Theme

Material styles etc.
https://medium.com/androiddevelopers/migrating-to-material-components-for-android-ec6757795351

https://m3.material.io/libraries/mdc-android/color-theming

Full color list:
https://material.io/design/material-theming/implementing-your-theme.html#color

-->
<resources>
    <!-- Top level Theme for the startup activity so it looks like a dialog as intended. -->
    <style name="Theme.App.Startup" parent="Theme.Material3.DayNight.Dialog">
        <item name="colorPrimary">@color/blue_grey_300</item>
        <item name="colorOnPrimary">@color/white</item>
        <item name="colorSecondary">@color/teal_300</item>
        <item name="colorOnSecondary">@color/white</item>
    </style>

    <!-- Top level Theme for full screen usage. -->
    <style name="Theme.App.FullScreen" parent="Theme.App">
        <item name="android:windowFullscreen">true</item>
        <item name="android:windowContentOverlay">@null</item>
        <item name="android:windowIsFloating">false</item>
    </style>

    <!-- Top level Theme to be used in AndroidManifest.xml-->
    <style name="Theme.App" parent="Base.Theme.App">
        <!-- Material color attributes -->
        <item name="colorPrimary">@color/blue_grey_300</item>
        <item name="colorOnPrimary">@color/white</item>
        <item name="colorSecondary">@color/teal_300</item>
        <item name="colorOnSecondary">@color/white</item>

        <item name="android:colorBackground">@color/grey_25</item>

        <!-- Application specific -->
        <item name="appToolbarBackground">@color/blue_grey_200</item>
        <item name="appBobListHeaderBackground">@color/blue_grey_100</item>
        <item name="appBobCardBackgroundColor">@color/grey_50</item>
        <item name="appProgressCircleBackgroundColor">@color/grey_50</item>

        <item name="appPreferenceAlertColor">@color/deep_orange_900</item>

        <!-- gradient used in the Navigation side bar. -->
        <item name="appNavBarColorStart">@color/blue_grey_500</item>
        <item name="appNavBarColorCenter">@color/blue_grey_300</item>
        <item name="appNavBarColorEnd">@color/blue_grey_50</item>
    </style>


    <!-- Base theme - used by both Day and Night themes. -->
    <style name="Base.Theme.App" parent="Theme.Material3.DayNight.NoActionBar">
        <item name="android:statusBarColor">?attr/colorPrimary</item>

        <item name="chipGroupStyle">@style/App.ChipGroup</item>
        <item name="tabStyle">@style/App.TabBar</item>
        <item name="snackbarTextViewStyle">@style/App.SnackbarTextViewStyle</item>
        <item name="materialCalendarFullscreenTheme">@style/ThemeOverlay.App.MaterialCalendar</item>
        <item name="circularProgressIndicatorStyle">@style/App.Progress.Circle</item>

        <!-- Chip styles as attributes makes it easy to add chips from code -->
        <item name="appChipDisplayStyle">@style/Chip.Display</item>
        <item name="appChipFilterStyle">@style/Widget.Material3.Chip.Filter</item>
        <item name="appChipInputStyle">@style/Widget.Material3.Chip.Input</item>


        <!--
            URGENT: unknown android bug in rendering ImageButton using Widget.Material3.Button.IconButton
            Material 1.5.0-rc01 and 1.6.0-alpha03

            Debugged down to the level of:

            res/color/m3_text_button_background_color_selector.xml

            <selector xmlns:android="http://schemas.android.com/apk/res/android">
                <item android:color="?attr/colorSecondaryContainer" android:state_enabled="true" android:state_checked="true"/>

                <item android:color="?attr/colorContainer"/>
            </selector>

            and laying out the ImageButton results in:

            java.lang.UnsupportedOperationException: Failed to resolve attribute at index 0: TypedValue{t=0x2/d=0x7f0400ef a=-1}
                at android.content.res.TypedArray.getColor(TypedArray.java:528)
                at androidx.core.content.res.ColorStateListInflaterCompat.inflate(ColorStateListInflaterCompat.java:160)
                at androidx.core.content.res.ColorStateListInflaterCompat.createFromXmlInner(ColorStateListInflaterCompat.java:125)
                at androidx.core.content.res.ColorStateListInflaterCompat.createFromXml(ColorStateListInflaterCompat.java:104)
                at androidx.core.content.res.ResourcesCompat.inflateColorStateList(ResourcesCompat.java:262)
                at androidx.core.content.res.ResourcesCompat.getColorStateList(ResourcesCompat.java:236)
                at androidx.core.content.ContextCompat.getColorStateList(ContextCompat.java:519)
                at androidx.appcompat.content.res.AppCompatResources.getColorStateList(AppCompatResources.java:48)
                at androidx.appcompat.widget.TintTypedArray.getColorStateList(TintTypedArray.java:178)
                at androidx.appcompat.widget.AppCompatBackgroundHelper.loadFromAttributes(AppCompatBackgroundHelper.java:66)
                at androidx.appcompat.widget.AppCompatImageButton.<init>(AppCompatImageButton.java:83)
                at androidx.appcompat.widget.AppCompatImageButton.<init>(AppCompatImageButton.java:73)
                at androidx.appcompat.app.AppCompatViewInflater.createImageButton(AppCompatViewInflater.java:226)

            also see
            https://github.com/material-components/material-components-android/blob/master/lib/java/com/google/android/material/color/res/values/attrs.xml

            Adding these to the actual "TIL.Button.Clear" does not work. But adding them to the theme it does.
        -->
        <!-- The colors used by the color selectors -->
        <item name="colorOnContainer">?attr/colorPrimary</item>
        <item name="colorContainer">@android:color/transparent</item>
    </style>

    <!-- ThemeOverlay - used by both Day and Night themes. -->
    <style name="ThemeOverlay.App.MaterialCalendar" parent="ThemeOverlay.Material3.MaterialCalendar.Fullscreen">
        <item name="materialCalendarHeaderLayout">@style/App.MaterialCalendar.HeaderLayout</item>
        <item name="materialCalendarHeaderConfirmButton">@style/App.MaterialCalendar.HeaderConfirmButton</item>
    </style>
</resources>
