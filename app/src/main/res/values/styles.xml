<?xml version="1.0" encoding="utf-8"?>
<!--
  ~ @Copyright 2020 HardBackNutter
  ~ @License GNU General Public License
  ~
  ~ This file is part of NeverTooManyBooks.
  ~
  ~ In August 2018, this project was forked from:
  ~ Book Catalogue 5.2.2 @2016 Philip Warner & Evan Leybourn
  ~
  ~ Without their original creation, this project would not exist in its
  ~ current form. It was however largely rewritten/refactored and any
  ~ comments on this fork should be directed at HardBackNutter and not
  ~ at the original creators.
  ~
  ~ NeverTooManyBooks is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ NeverTooManyBooks is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with NeverTooManyBooks. If not, see <http://www.gnu.org/licenses/>.
  -->

<resources
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">

    <!-- *************************************************************************************** -->
    <!-- Page dividers -->
    <!-- *************************************************************************************** -->

    <!--    <style name="HorizontalDivider">-->
    <!--        <item name="android:layout_width">0dp</item>-->
    <!--        &lt;!&ndash; reminder: don't set layout_height to wrap_content,-->
    <!--            will CF the layout &ndash;&gt;-->
    <!--        <item name="android:layout_height">1dp</item>-->
    <!--        <item name="android:layout_marginTop">2dp</item>-->
    <!--        <item name="android:layout_marginBottom">2dp</item>-->
    <!--        <item name="android:background">?android:attr/dividerHorizontal</item>-->
    <!--    </style>-->

    <!--    &lt;!&ndash; used in landscape mode only &ndash;&gt;-->
    <!--    <style name="VerticalDivider">-->
    <!--        &lt;!&ndash; reminder: don't set layout_width to wrap_content,-->
    <!--            will CF the layout &ndash;&gt;-->
    <!--        <item name="android:layout_width">1dp</item>-->
    <!--        <item name="android:layout_height">0dp</item>-->
    <!--        <item name="android:layout_marginStart">2dp</item>-->
    <!--        <item name="android:layout_marginEnd">2dp</item>-->
    <!--        <item name="android:background">?android:attr/dividerVertical</item>-->
    <!--    </style>-->

    <!-- *************************************************************************************** -->
    <!-- Field & section labels -->
    <!-- *************************************************************************************** -->

    <!-- Base style; not to be used directly in layouts. -->
    <style name="Label">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
        <item name="android:textStyle">bold</item>
    </style>

    <!-- generic field labels where the data is below the label -->
    <style name="Label.Field">
    </style>

    <!-- generic field labels where the data is on the side of the label -->
    <style name="Label.Field.Inline">
        <item name="android:paddingEnd">@dimen/indent1</item>
    </style>

    <!-- Section field labels where the data is below the label -->
    <style name="Label.Section">
        <item name="android:layout_marginTop">@dimen/border1</item>
    </style>

    <!-- Section field labels where there is a set of data below. -->
    <style name="Label.Header">
        <item name="android:layout_marginTop">@dimen/border2</item>
        <item name="android:layout_marginBottom">@dimen/border1</item>
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
    </style>

    <!-- Section field labels where there is a set of data below. -->
    <style name="Label.Header.Small">
        <item name="android:textAllCaps">true</item>
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
    </style>

    <!-- *************************************************************************************** -->
    <!-- Generic TextView with user-data in 3 sizes -->
    <!-- *************************************************************************************** -->

    <!-- 'medium' detail text field; for example Series title, ... -->
    <style name="Text">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textIsSelectable">true</item>
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
    </style>

    <!-- Book title gets a distinct style. -->
    <style name="Text.BookTitle">
        <item name="android:textStyle">italic</item>
    </style>

    <!-- Description and personal notes. -->
    <style name="Text.Notes">
        <item name="android:textIsSelectable">true</item>
        <item name="android:background">@drawable/outline</item>
    </style>

    <!-- 'minor' detail text field; for example format, isbn,... -->
    <style name="Text.Small">
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
    </style>

    <!-- Book title gets a distinct style. -->
    <style name="Text.Small.BookTitle" tools:keep="@style/TextDetail_Small_BookTitle">
        <item name="android:textStyle">italic</item>
    </style>

    <!-- 'major' detail text field. -->
    <style name="Text.Large">
        <item name="android:textAppearance">?android:attr/textAppearanceLarge</item>
    </style>

    <!-- Book title gets a distinct style. -->
    <style name="Text.Large.BookTitle">
        <item name="android:textStyle">italic</item>
    </style>

    <!-- On loan to X. -->
    <style name="Text.OnLoanBar">
        <item name="android:background">?android:attr/colorForeground</item>
        <item name="android:paddingStart">@dimen/indent2</item>
        <item name="android:paddingEnd">@dimen/indent2</item>
        <item name="android:textAppearance">?android:attr/textAppearanceLargeInverse</item>
    </style>

    <!-- *************************************************************************************** -->
    <!-- Information (blurb) TextView fields -->
    <!-- *************************************************************************************** -->

    <!-- header/title *inside* a RadioGroup element -->
    <style name="RadioGroupHeader">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginStart">@dimen/indent1</item>
        <item name="android:layout_marginEnd">@dimen/indent2</item>
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
    </style>

    <!-- informational piece of text -->
    <style name="Blurb">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginStart">@dimen/indent1</item>
        <item name="android:layout_marginEnd">@dimen/indent2</item>
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
    </style>

    <!-- informational piece of text -->
    <style name="Blurb.Small">
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
    </style>

    <!-- *************************************************************************************** -->
    <!-- EditText fields -->
    <!-- *************************************************************************************** -->

    <!-- slight misnomer as this is not an Envelope, but this way the naming
         is in line with "Envelope.EditText";
          i.e. a (secondary) Button next to an EditText. -->
    <style name="Envelope.Button"
        parent="Widget.MaterialComponents.Button.OutlinedButton">
        <item name="android:layout_width">@dimen/icon_button_width</item>
        <item name="android:layout_height">0dp</item>
        <item name="iconTint">?attr/editTextColor</item>
        <item name="iconGravity">textStart</item>
        <item name="iconPadding">0dp</item>
    </style>

    <style name="Envelope.EditText"
        parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox.Dense">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_margin">@dimen/border0</item>
        <item name="endIconMode">clear_text</item>
    </style>

    <style name="Envelope.EditText.Isbn">
        <item name="android:hint">@string/lbl_isbn</item>
        <item name="startIconDrawable">@drawable/ic_check</item>
        <item name="startIconTint">?attr/checked_icon_tint</item>
    </style>

    <style name="Envelope.EditText.SeriesNum">
        <item name="android:layout_width">200dp</item>
    </style>

    <style name="Envelope.AutoCompleteTextView"
        parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox.Dense.ExposedDropdownMenu">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_margin">@dimen/border0</item>
    </style>

    <!-- Base style for all EditText and AutoComplete; not to be used directly in layouts. -->
    <style name="EditText">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
    </style>

    <!-- A disabled edit text field, on which an onClickListener can be installed.
        Without the latter, it behaves like a read-only EditText. -->
    <style name="EditText.Button">
        <item name="android:clickable">false</item>
        <item name="android:focusable">false</item>
        <item name="android:inputType">none</item>
        <item name="android:cursorVisible">false</item>
        <item name="android:longClickable">false</item>
    </style>

    <!-- Base style for Localized field; not to be used directly in layouts. -->
    <style name="EditText.AutoComplete">
        <!-- default threshold is 1 which when used with Field formatters can get very tricky -->
        <item name="android:completionThreshold">2</item>
    </style>
    <!-- Base style for Localized field; not to be used directly in layouts. -->
    <style name="EditText.AutoComplete.Title" />
    <!-- Base style for Localized field; not to be used directly in layouts. -->
    <style name="EditText.Title" />
    <!-- Base style for Localized field; not to be used directly in layouts. -->
    <style name="EditText.Notes" />
    <!-- Base style for Localized field; not to be used directly in layouts. -->
    <style name="EditText.AutoComplete.Name" />

    <style name="EditText.SeriesNumber">
        <item name="android:inputType">text</item>
        <item name="android:singleLine">true</item>
    </style>

    <!-- International three character currency code (uppercase) -->
    <style name="EditText.Currency">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:textAlignment">viewEnd</item>
        <item name="android:inputType">text|textCapCharacters</item>
        <item name="android:ems">5</item>
        <item name="android:maxLength">3</item>
        <item name="android:completionThreshold">1</item>
        <item name="android:singleLine">true</item>
    </style>

    <!-- The textAppearanceMedium here is suited for the smallest screen (both portrait/landscape)
        For all bigger screens, we will use textAppearanceLarge: See the "w340dp-h330dp" styles.xml
    -->
    <style name="EditText.Isbn">
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
        <item name="android:digits">1234567890xX</item>
        <!-- the inputType is IGNORED when the field is a {@link EditIsbn} -->
        <item name="android:inputType">textCapCharacters|textNoSuggestions</item>
    </style>

    <!-- An editable CheckBox. We basically want this to be the same height as EditText fields. -->
    <style name="CheckboxEntry" parent="Widget.MaterialComponents.CompoundButton.CheckBox">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">@dimen/edit_text_height</item>
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
    </style>

    <style name="CheckboxEntry.Small" parent="Widget.MaterialComponents.CompoundButton.CheckBox">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">24dp</item>
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
    </style>

    <!-- ImageButton - a text-picker button next to an edit field -->
    <style name="DropDownMenu">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">0dp</item>
        <item name="android:padding">@dimen/border2</item>
        <item name="android:background">?android:attr/selectableItemBackground</item>
        <item name="android:focusable">true</item>
        <item name="android:src">@drawable/ic_view_list</item>
    </style>

    <!-- *************************************************************************************** -->
    <!-- Keys on the isbn search keyboard. -->
    <!-- *************************************************************************************** -->

    <!-- Base style for the isbn search keyboard; not to be used directly in layouts. -->
    <style name="IsbnKeyPad" parent="Widget.MaterialComponents.Button">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">0dp</item>
        <item name="android:layout_marginStart">@dimen/indent1</item>
        <item name="android:layout_marginEnd">@dimen/indent1</item>
    </style>

    <!-- 0..9 and X -->
    <style name="IsbnKeyPad.NumberButton">
        <item name="android:textAppearance">?android:attr/textAppearanceLarge</item>
    </style>

    <style name="IsbnKeyPad.SearchButton">
    </style>

    <style name="IsbnKeyPad.BackspaceButton">
        <item name="android:paddingLeft">@dimen/isbn_key_pad_backspace_button_icon_padding_left</item>
        <item name="android:layout_width">@dimen/isbn_key_pad_backspace_button_width</item>
        <item name="icon">@drawable/ic_backspace</item>
    </style>

    <!-- *************************************************************************************** -->
    <!-- Rows in a list -->
    <!-- *************************************************************************************** -->

    <!-- Some sort of button in a row; not to be used directly in layouts -->
    <style name="RowButton">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:padding">@dimen/border2</item>
    </style>

    <!-- CheckBox - editable checkbox with custom icon -->
    <style name="RowButton.Checkable">
        <item name="android:focusable">true</item>
        <item name="android:focusableInTouchMode">false</item>
        <item name="android:button">?android:attr/textCheckMark</item>
    </style>

    <!-- ImageButton - 'delete this row' -->
    <style name="RowButton.Delete">
        <item name="android:focusable">true</item>
        <item name="android:focusableInTouchMode">false</item>
        <item name="android:clickable">true</item>
        <item name="android:src">@drawable/ic_delete</item>
        <item name="android:background">?android:attr/selectableItemBackground</item>
    </style>

    <!-- ImageView - handle to let the user drag & drop rows to re-order them -->
    <style name="RowButton.DragHandle">
        <item name="android:src">@drawable/ic_reorder</item>
    </style>

    <!-- LinearLayout/ConstraintLayout - the details part of the row in a list row. -->
    <style name="RowTextSection">
        <item name="android:layout_width">0dp</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:focusable">false</item>
        <item name="android:orientation">vertical</item>
    </style>

    <!-- a row inside a list details row; not to be used directly in layouts -->
    <style name="RowTextLine">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:ellipsize">marquee</item>
        <item name="android:singleLine">true</item>
        <item name="android:textIsSelectable">false</item>
    </style>

    <!-- Primary row inside a list details row. -->
    <style name="RowTextLine.Primary">
        <item name="android:textAppearance">?android:attr/textAppearanceListItem</item>
    </style>

    <!-- Secondary rows inside a list details row. -->
    <style name="RowTextLine.Secondary">
        <item name="android:textAppearance">?android:attr/textAppearanceListItemSecondary</item>
        <!-- indent a bit -->
        <item name="android:layout_marginStart">@dimen/indent2</item>
    </style>

    <!-- *************************************************************************************** -->
    <!-- row, button and blurb for 'options' in a an option list (e.g. on a dialog) -->
    <!-- *************************************************************************************** -->

    <!-- Clickable row in a list. -->
    <style name="OptionRow">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
    </style>

    <!-- a row that can be 'selected' -->
    <style name="OptionRow.Selectable">
        <item name="android:background">@drawable/color_selector_row_highlight</item>
    </style>

    <!-- Option in the list shown as a Checkable (RadioButton, Checkbox ...).
         Flashes when clicked.  -->
    <style name="OptionRow.Checkable">
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
        <item name="android:background">?android:attr/listChoiceBackgroundIndicator</item>
    </style>

    <!-- Used for a dedicated 'help' TextView associated with a Checkable option -->
    <style name="OptionRow.Checkable.Blurb">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:paddingStart">@dimen/indent_compound_button</item>
        <item name="android:paddingEnd">0dp</item>
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
    </style>

    <!-- *************************************************************************************** -->
    <!-- Cover image  -->
    <!-- *************************************************************************************** -->

    <!-- Cover image;
        layout_width/layout_height is set from code to wrap/wrap for real images,
        and to a calculation for placeholders.
        The maximum width/height of the view is also done from code.
         -->
    <style name="CoverImage">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:padding">@dimen/border1</item>
        <item name="android:scaleType">centerInside</item>
        <item name="android:adjustViewBounds">true</item>
    </style>

    <!-- full screen zoomed -->
    <style name="CoverImage.Zoomed">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">match_parent</item>
    </style>

    <!-- *************************************************************************************** -->
    <!-- Flags == Read-only "CheckBox" with custom 'check/invisible' icon in our custom color.
         Note we use selectors even when we just make them visible/gone instead of
         checked/unchecked. While not optimal this gives more flexibility. -->
    <!-- *************************************************************************************** -->

    <!-- Base Flag; not to be used directly in layouts -->
    <style name="Flag">
        <!-- Using 'Theme.AppCompat' a wrap_content/wrap_content worked fine.
             Since using 'Theme.MaterialComponents' it had to be set to 24/24 (i.e. icon size) -->
        <item name="android:layout_width">@dimen/icon_size</item>
        <item name="android:layout_height">@dimen/icon_size</item>
        <item name="android:enabled">false</item>
        <item name="android:clickable">false</item>
        <item name="android:focusable">false</item>
        <item name="android:focusableInTouchMode">false</item>
    </style>

    <!-- Generic Indicator. -->
    <style name="Flag.Generic">
        <item name="android:button">@drawable/ic_selector_check</item>
        <item name="android:buttonTint">?attr/checked_icon_tint</item>
    </style>

    <!-- Indicator a book has been read. -->
    <style name="Flag.Read">
        <item name="android:button">@drawable/ic_selector_read</item>
        <item name="android:buttonTint">?attr/checked_icon_tint</item>
    </style>

    <!-- Indicator a book is a first edition. -->
    <style name="Flag.FirstEdition">
        <item name="android:button">@drawable/ic_selector_first_edition</item>
    </style>

    <!-- Indicator a book is signed. -->
    <style name="Flag.Signed">
        <item name="android:button">@drawable/ic_selector_signed</item>
    </style>

    <!-- Indicator a book has been lend out. -->
    <style name="Flag.OnLoan">
        <item name="android:button">@drawable/ic_selector_on_loan</item>
        <item name="android:buttonTint">?attr/colorError</item>
    </style>

    <!-- Indicator a story (TOC entry) is present in multiple books -->
    <style name="Flag.MultipleBooks">
        <item name="android:button">@drawable/ic_selector_multiple_books</item>
    </style>

    <!-- *************************************************************************************** -->
    <!-- BooklistBook various -->
    <!-- *************************************************************************************** -->

    <!-- Booklist; not to be used directly in layouts -->
    <style name="BooklistBook">
        <item name="android:layout_height">wrap_content</item>
    </style>

    <!-- Booklist; not to be used directly in layouts -->
    <style name="BooklistBook.Header">
        <item name="android:layout_width">0dp</item>
        <item name="android:textIsSelectable">false</item>
    </style>

    <!-- the header on the booklist activity -->
    <style name="BooklistBook.Header.Text">
        <item name="android:layout_marginStart">@dimen/indent2</item>
        <item name="android:layout_marginEnd">@dimen/indent2</item>
        <item name="android:singleLine">true</item>
        <item name="android:ellipsize">marquee</item>
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
    </style>

    <!-- the header on the booklist activity -->
    <style name="BooklistBook.Header.Text.Small">
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
    </style>

    <!-- Booklist; not to be used directly in layouts -->
    <style name="BooklistBook.Bullet">
        <item name="android:layout_width">0dp</item>
        <item name="android:backgroundTint">?android:attr/colorForeground</item>
        <item name="android:src">@drawable/ic_lens</item>
    </style>

    <style name="BooklistBook.Bullet.Level2">
        <item name="android:scaleX">0.3</item>
        <item name="android:scaleY">0.3</item>
    </style>

    <style name="BooklistBook.Bullet.Level3">
        <item name="android:scaleX">0.2</item>
        <item name="android:scaleY">0.2</item>
    </style>

    <!-- level + book rows = The row itself. -->
    <style name="BooklistBook.Row">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_marginBottom">0dp</item>
    </style>

    <style name="BooklistBook.Row.Level1">
        <item name="android:layout_marginTop">@dimen/booklist_row_spacer</item>
    </style>

    <style name="BooklistBook.Row.Level2">
        <!--        <item name="android:layout_marginTop">@dimen/border0</item>-->
    </style>

    <style name="BooklistBook.Row.Level3">
        <!--<item name="android:layout_marginTop">@dimen/border0</item>-->
    </style>

    <style name="BooklistBook.Row.Book" tools:keep="@style/BooklistBook_Row_Book">
        <item name="android:layout_marginTop">@dimen/border1</item>
    </style>

    <!-- Text element in a 'level' header row -->
    <style name="BooklistBook.Section">
        <item name="android:layout_width">0dp</item>
        <item name="android:textStyle">bold</item>
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
    </style>

    <!-- Text element in a 'level' header row -->
    <style name="BooklistBook.Section.Large">
        <item name="android:paddingTop">@dimen/border1</item>
        <item name="android:textAppearance">?android:attr/textAppearanceLarge</item>
    </style>

    <!-- Text element in a 'level' header row -->
    <style name="BooklistBook.Section.Small" tools:keep="@style/BooklistBook_Section_Small">
        <item name="android:padding">@dimen/border1</item>
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
    </style>

    <!-- Text element in a 'book' row -->
    <style name="BooklistBook.BookInfo">
        <item name="android:layout_width">0dp</item>
    </style>

    <style name="BooklistBook.BookInfo.Title">
        <!--        <item name="android:textIsSelectable">true</item>-->
        <item name="android:padding">@dimen/border1</item>
        <item name="android:textStyle">italic</item>
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
    </style>

    <style name="BooklistBook.BookInfo.SeriesNum">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:padding">@dimen/border1</item>
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
    </style>

    <style name="BooklistBook.BookInfo.SeriesNumLong">
        <item name="android:paddingStart">@dimen/indent1</item>
        <item name="android:paddingEnd">@dimen/indent1</item>
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
    </style>

    <style name="BooklistBook.BookInfo.Secondary">
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
    </style>

    <!-- *************************************************************************************** -->
    <!-- Single use / specialised styles -->
    <!-- *************************************************************************************** -->

    <!-- clickable URL -->
    <style name="Url">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textAppearance">?android:attr/textAppearanceMedium</item>
        <item name="android:textColor">?android:attr/textColorPrimaryNoDisable</item>
    </style>

    <style name="SnackbarText" parent="@style/Widget.MaterialComponents.Snackbar.TextView">
        <item name="android:maxLines">2</item>
    </style>

    <!-- error. -->
    <style name="ErrorMessage">
        <item name="android:layout_height">wrap_content</item>
        <item name="android:textColor">?android:attr/colorError</item>
        <item name="android:textStyle">bold</item>
        <item name="android:textIsSelectable">true</item>
        <item name="android:textAppearance">?android:attr/textAppearanceSmall</item>
    </style>

    <style name="NavigationView">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">match_parent</item>
        <item name="android:layout_gravity">start</item>
        <item name="android:fitsSystemWindows">true</item>
    </style>

    <style name="Toolbar" parent="Widget.MaterialComponents.Toolbar">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:background">?android:attr/colorPrimary</item>
        <item name="android:elevation">4dp</item>
    </style>

    <style name="TabBar" parent="Widget.MaterialComponents.TabLayout">
        <item name="android:background">?attr/colorSurface</item>
        <item name="tabIndicatorColor">?attr/colorPrimary</item>
        <item name="tabTextColor">@color/tab_text_color_selector</item>
    </style>

    <!-- the outer frame (e.g. 'root') for a Dialog -->
    <style name="DialogFrame">
        <item name="android:layout_width">match_parent</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:padding">@dimen/border2</item>
    </style>

    <!-- A button as wide as the screen. -->
    <style name="MenuButton" parent="Widget.MaterialComponents.Button">
        <item name="android:layout_width">@dimen/largeMenuButton</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_margin">@dimen/border2</item>
    </style>

    <!-- generic FAB button. -->
    <style name="FAB" parent="Widget.MaterialComponents.FloatingActionButton">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_gravity">bottom|end</item>
        <item name="android:layout_margin">@dimen/fab_margin</item>
    </style>

    <!-- FAB buttons that appear as a menu above the actual FAB button. -->
    <style name="FABMenu" parent="Widget.MaterialComponents.ExtendedFloatingActionButton">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_gravity">bottom|end</item>
        <item name="android:visibility">invisible</item>
        <item name="android:layout_margin">@dimen/fab_margin</item>
        <item name="iconGravity">end</item>
    </style>

    <!-- An EditText where the user can enter a date manually (i.e. android system). -->
    <style name="ManualDateEntry">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginStart">@dimen/indent_compound_button</item>
        <item name="android:ems">10</item>
        <item name="android:inputType">date</item>
    </style>

    <!-- ImageButton -->
    <style name="InfoButton">
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
        <item name="android:layout_marginStart">@dimen/indent1</item>
        <item name="android:padding">@dimen/border1</item>
        <item name="android:background">@android:color/transparent</item>
        <item name="android:src">@drawable/ic_info_outline</item>
    </style>

    <!-- *************************************************************************************** -->
</resources>
