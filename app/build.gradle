/*
 * @Copyright 2018-2021 HardBackNutter
 * @License GNU General Public License
 *
 * This file is part of NeverTooManyBooks.
 *
 * NeverTooManyBooks is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * NeverTooManyBooks is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with NeverTooManyBooks. If not, see <http://www.gnu.org/licenses/>.
 */

import java.time.LocalDateTime
import java.time.ZoneOffset
import java.time.format.DateTimeFormatter

apply plugin: 'com.android.application'

/*
    $HOME/.gradle/gradle.properties:
    NeverTooManyBooks.signing=$HOME/blah/blah/NeverTooManyBooks.signing

    $HOME/blah/blah/NeverTooManyBooks.signing:
    android {
        signingConfigs {
            debug {
                storeFile file('/path/to/keystore.jks')
                storePassword 'myPassword'
                keyAlias = 'myDebugKey'
                keyPassword 'myPassword'
            }
            beta {
                storeFile file('/path/to/keystore.jks')
                storePassword 'myPassword'
                keyAlias = 'myBetaKey'
                keyPassword 'myPassword'
            }
            release {
                storeFile file('/path/to/keystore.jks')
                storePassword 'myPassword'
                keyAlias = 'myReleaseKey'
                keyPassword 'myPassword'
            }
        }

        buildTypes {
            debug {
                signingConfig signingConfigs.debug
            }
            beta {
                signingConfig signingConfigs.beta
            }
            release {
                signingConfig signingConfigs.release
            }
        }
    }
 */
if (project.hasProperty("NeverTooManyBooks.signing")
        && new File(project.property("NeverTooManyBooks.signing")).exists()) {
    apply from: project.property("NeverTooManyBooks.signing")
}

/*
    $HOME/.gradle/gradle.properties:
    NeverTooManyBooks.apiKeys=$HOME/blah/blah/NeverTooManyBooks.apiKeys

    $HOME/blah/blah/NeverTooManyBooks.apiKeys:
    android {
        defaultConfig {
            buildConfigField('String', 'GOODREADS_PUBLIC_KEY', '"realKey"')
            buildConfigField('String', 'GOODREADS_PRIVATE_KEY', '"realSecret"')
        }
    }
 */
if (project.hasProperty("NeverTooManyBooks.apiKeys")
        && new File(project.property("NeverTooManyBooks.apiKeys")).exists()) {
    apply from: project.property("NeverTooManyBooks.apiKeys")
}

/*
    $HOME/.gradle/gradle.properties:
    NeverTooManyBooks.email=$HOME/blah/blah/NeverTooManyBooks.email

    $HOME/blah/blah/NeverTooManyBooks.email:
    android {
        defaultConfig {
            // ACRA crash reports
            buildConfigField('String', 'EMAIL_ACRA', '"acra@somewhere.com"')
            // Manual debug reports
            buildConfigField('String', 'EMAIL_DEBUG_REPORT', '"debug@somewhere.com"')
            // About-page contact
            buildConfigField('String', 'EMAIL_CONTACT', '"info@somewhere.com"')
        }
    }
 */
if (project.hasProperty("NeverTooManyBooks.email")
        && new File(project.property("NeverTooManyBooks.email")).exists()) {
    apply from: project.property("NeverTooManyBooks.email")
}

android {
    compileSdkVersion 30

    // https://gs.statcounter.com/os-version-market-share/android/mobile-tablet/worldwide
    // 2021-02-16 world wide:
    // 10.0     44.47
    // 9.0      65.76
    // 8.1      75.65
    // 8.0      80.82
    // 7.1      83.9
    // 7.0      88.16

    // Android Studio 'new project' page (has not been updated since at least 2020-04-11)
    //  A       API     %
    // 10       29       8.2
    //  9       28      39.5
    //  8.1     27      53.5
    //  8       26      60.8
    //  7.1     25      66.2
    //  7       24      73.7

    defaultConfig {
        applicationId 'com.hardbacknutter.nevertoomanybooks'
        // see NOTES.txt
        minSdkVersion 24
        targetSdkVersion 30
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        // API key placeholders. Their values should be empty, i.e. '""'.
        // The real values are in "NeverTooManyBooks.apiKeys"; see above
        if (getBuildConfigFields().get('GOODREADS_PUBLIC_KEY') == null) {
            buildConfigField('String', 'GOODREADS_PUBLIC_KEY', '""')
            buildConfigField('String', 'GOODREADS_PRIVATE_KEY', '""')
        }

        // Email address placeholders. Their values should be empty, i.e. '""'.
        // The real values are in "NeverTooManyBooks.email"; see above
        if (getBuildConfigFields().get('EMAIL_ACRA') == null) {
            // ACRA crash reports
            buildConfigField('String', 'EMAIL_ACRA', '""')
            // Manual debug reports
            buildConfigField('String', 'EMAIL_DEBUG_REPORT', '""')
            // About-page contact
            buildConfigField('String', 'EMAIL_CONTACT', '""')
        }

        // Add the build UTC DateTime; ISO formatted
        buildConfigField('String', 'TIMESTAMP',
                '"' + LocalDateTime.now(ZoneOffset.UTC)
                        .format(DateTimeFormatter.ISO_LOCAL_DATE_TIME) + '"')

        buildConfigField('boolean', 'ENABLE_GOOGLE_BOOKS', 'true')

        // Dutch.
        buildConfigField('boolean', 'ENABLE_KB_NL', 'true')
        // Dutch.
        buildConfigField('boolean', 'ENABLE_LAST_DODO', 'true')
        // Dutch.
        buildConfigField('boolean', 'ENABLE_STRIP_INFO', 'true')

        // 2020-03-27. Started getting "APIs Temporarily disabled" on LIBRARY_THING
        // searches and "Temporarily down on images.
        // Confirmed in LT forums; The entire API is currently disabled because of work on LT2.
        buildConfigField('boolean', 'ENABLE_LIBRARY_THING', 'false')
        // but the alternative edition link still works (for now?).
        buildConfigField('boolean', 'ENABLE_LIBRARY_THING_ALT_ED', 'true')

        // under development
        buildConfigField('boolean', 'MENU_PICKER_USES_FRAGMENT', 'false')
        buildConfigField('boolean', 'ENABLE_STYLE_BOOKSHELF_FILTER', 'false')
        buildConfigField('boolean', 'ENABLE_STRIP_INFO_LOGIN', 'false')
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'),
                    'proguard-rules.pro'
        }
        beta {
            initWith release
            versionNameSuffix 'beta'
        }
        debug {
            versionNameSuffix 'debug'

            // If set, we'll use {@link MenuPickerDialogFragment} where implemented.
            // uses reflection to access a private variable
            buildConfigField('boolean', 'MENU_PICKER_USES_FRAGMENT', 'true')
            // under development
            buildConfigField('boolean', 'ENABLE_STYLE_BOOKSHELF_FILTER', 'true')
            // under development
            buildConfigField('boolean', 'ENABLE_STRIP_INFO_LOGIN', 'true')
        }
    }

    lintOptions {
        // allow command line builds to complete
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        // https://developer.android.com/studio/releases/#4-0-0-desugar
        coreLibraryDesugaringEnabled true
    }

    buildFeatures {
        viewBinding = true
    }

    testOptions {
        unitTests.includeAndroidResources = true
        // Can be enabled to make Log.x work. OR, use Logger.x
        unitTests.returnDefaultValues = false
        unitTests.all {
            reports {
                junitXml.enabled = true
                html.enabled = false
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/README.md'
        exclude 'META-INF/CHANGES'
    }
}

// AndroidX release notes:  https://developer.android.com/jetpack/androidx/versions
dependencies {
    implementation project(path: ':repacked-org-json')
    implementation project(path: ':fastscroller')

    // https://github.com/google/desugar_jdk_libs
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'
    //
    implementation 'androidx.activity:activity:1.3.0-alpha06'
    implementation 'androidx.annotation:annotation:1.3.0-alpha01'
    implementation 'androidx.appcompat:appcompat:1.3.0-rc01'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.0-beta01'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation 'androidx.core:core:1.6.0-alpha02'
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'androidx.drawerlayout:drawerlayout:1.1.1'
    implementation 'androidx.exifinterface:exifinterface:1.3.2'
    implementation 'androidx.fragment:fragment:1.3.2'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-livedata:2.3.1'
    implementation 'androidx.preference:preference:1.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    implementation 'androidx.viewpager2:viewpager2:1.1.0-alpha01'
    //implementation 'androidx.work:work-runtime:2.5.0'

    // https://github.com/material-components/material-components-android/releases
    implementation 'com.google.android.material:material:1.4.0-alpha02'

    // https://github.com/ACRA/acra/wiki/BasicSetup
    implementation 'ch.acra:acra-mail:5.7.0'
    implementation 'ch.acra:acra-toast:5.7.0'
    implementation 'ch.acra:acra-dialog:5.7.0'

    // OAuth for Goodreads secure access. https://github.com/mttkay/signpost
    implementation 'oauth.signpost:signpost-core:2.1.1'

    // Tar file support for backups
    // http://commons.apache.org/proper/commons-compress/
    implementation 'org.apache.commons:commons-compress:1.20'
    // http://commons.apache.org/proper/commons-codec/
    implementation 'commons-codec:commons-codec:1.13'

    // jsoup HTML parser library @ https://jsoup.org/
    implementation 'org.jsoup:jsoup:1.13.1'

    // Embedded ZXing: https://github.com/journeyapps/zxing-android-embedded
    implementation 'com.journeyapps:zxing-android-embedded:4.2.0'
    implementation 'com.google.zxing:core:3.4.1'

    // local tests use JUnit5
    testImplementation 'org.mockito:mockito-core:3.9.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.1'

    // device tests use JUnit4
    androidTestImplementation 'androidx.test:core:1.3.0'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'

//    testImplementation 'org.robolectric:robolectric:4.4'
//    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
