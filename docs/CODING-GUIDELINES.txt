Original guidelines for the project:

https://github.com/eleybourn/Book-Catalogue/wiki/Developer-Notes-Suggestions-Guidelines

Small notes in addition (with a pinch of salt... as I change my own mind from time to time)

* trimming
    The database (checked with v82) will/can contain untrimmed strings.
    Wherever a View is READ as a String, a trim should be done
       view.getText().toString().trim();

    Eventually the database will then be trim-proof.
    TODO: perhaps run a batch correction on all fields as an update ? bit brutal...

    No doubt some places do a trim which is not really needed, something for a rainy day.

* Layout in code:
    * Use a ViewGroup instead of e.g. LinearLayout where possible.
      This leaves the layout flexible to choose a different type without code changes

* checkable Buttons:
    * CheckBox, RadioButton, Switch, ToggleButton extend CompoundButton, implements Checkable
    * CheckedTextView extends TextView, implements Checkable

    Use 'CompoundButton' and/or 'Checkable' where possible.
    This leaves the layout flexible to choose a different type without code changes

* Switch() with a single case/default
  Yes, I prefer the uniformity.

* pedantic but I hope polite request:
  Single character variables names are best left to BASIC style from the 1980's
  (Android itself uses a lot of 'v' ... so who am I to talk...)

* handy regular expressions:

    Find all places where we forgot to add the trim when getting text from a View:
        getText\(\).toString\(\)(?!\.trim)


* TODO tags used; always followed with a colon
  - TODO:
  - FIXME:
  - ENHANCE:
  - API: like enhance, but specific for Android upgrades
  - TEST: work done, but needs proper testing
  - RELEASE: things that must be checked before doing a public release
  - NEWKIND: where a list of 'items' is processed -> where you can/should add 'items' to that list
